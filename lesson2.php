<?php
/*
1. Определить сложность следующих алгоритмов:
- Поиск элемента массива с известным индексом  O(1)
- Дублирование одномерного массива через foreach O(n)
- Рекурсивная функция нахождения факториала числа  O(n^2)
- Удаление элемента массива с известным индексом  O(1) 
2.Определить сложность следующих алгоритмов. Сколько произойдет итераций?

1) 700 итераций

$n = 100;
$array[]= [];

for ($i = 0; $i < $n; $i++) {
  for ($j = 1; $j < $n; $j *= 2) {
     $array[$i][$j]= true;
} }

2) 2550 итераций

$n = 100;
$array[] = [];

for ($i = 0; $i < $n; $i += 2) {
  for ($j = $i; $j < $n; $j++) {
   $array[$i][$j]= true;
} }
3. Требуется написать метод, принимающий на вход размеры двумерного массива и выводящий массив в виде инкременированной цепочки чисел, идущих по спирали.
Примеры:
2х3
1 2
6 3
5 4

3х1
1 2 3
4х4
01 02 03 04
12 13 14 05
11 16 15 06
10 09 08 07

0х7
Ошибка!
*/

function arrayIncrement(int $x, int $y){
    $max = $x * $y;
    $count = 1;
    $matrix = [];
    if ($x <= 0 || $y <= 0){
        echo "Ошибка";
    }
    
    for($n = 0; $count <= $max; $n++ ){
        
        for($i = $n; $i <  $x - $n; $i++){
            $matrix[$n][$i] = $count;
            $count++;
           
            
        }
        for($j = $n + 1; $j < $y - $n; $j++){
            $matrix[$j][$x - $n - 1] = $count;
            $count++;
           
        }
        if($count >= $max) break;
        for($i = $x - $n - 2; $i >= $n; $i--){
            $matrix[$y - $n - 1][$i] = $count;
            $count++;
            
        }
        for($j = $y - $n - 2; $j > $n; $j--){
            $matrix[$j][$n] = $count;
            $count++;
            
        }
        
    }

    for($i = 0; $i < $y; $i++){
        for($j = 0; $j < $x; $j++){
            echo $matrix[$i][$j] . ' ';
        }
        echo ''.PHP_EOL;
    }
    
}

arrayIncrement(7,7);
